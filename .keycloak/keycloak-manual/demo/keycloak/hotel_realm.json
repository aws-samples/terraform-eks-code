[
  {
    "id": "hotel",
    "realm": "hotel",
    "notBefore": 0,
    "revokeRefreshToken": false,
    "refreshTokenMaxReuse": 0,
    "accessTokenLifespan": 300,
    "accessTokenLifespanForImplicitFlow": 900,
    "ssoSessionIdleTimeout": 1800,
    "ssoSessionMaxLifespan": 36000,
    "ssoSessionIdleTimeoutRememberMe": 0,
    "ssoSessionMaxLifespanRememberMe": 0,
    "offlineSessionIdleTimeout": 2592000,
    "offlineSessionMaxLifespanEnabled": false,
    "offlineSessionMaxLifespan": 5184000,
    "clientSessionIdleTimeout": 0,
    "clientSessionMaxLifespan": 0,
    "clientOfflineSessionIdleTimeout": 0,
    "clientOfflineSessionMaxLifespan": 0,
    "accessCodeLifespan": 60,
    "accessCodeLifespanUserAction": 300,
    "accessCodeLifespanLogin": 1800,
    "actionTokenGeneratedByAdminLifespan": 43200,
    "actionTokenGeneratedByUserLifespan": 300,
    "enabled": true,
    "sslRequired": "external",
    "registrationAllowed": false,
    "registrationEmailAsUsername": false,
    "rememberMe": false,
    "verifyEmail": false,
    "loginWithEmailAllowed": true,
    "duplicateEmailsAllowed": false,
    "resetPasswordAllowed": false,
    "editUsernameAllowed": false,
    "bruteForceProtected": false,
    "permanentLockout": false,
    "maxFailureWaitSeconds": 900,
    "minimumQuickLoginWaitSeconds": 60,
    "waitIncrementSeconds": 60,
    "quickLoginCheckMilliSeconds": 1000,
    "maxDeltaTimeSeconds": 43200,
    "failureFactor": 30,
    "roles": {
      "realm": [
        {
          "id": "d33917ca-9dec-4435-9c07-762afb83b7be",
          "name": "doncella",
          "description": "Gives access to hotel doncella service.",
          "composite": false,
          "clientRole": false,
          "containerId": "hotel",
          "attributes": {}
        },
        {
          "id": "aa445ffd-17ac-4a04-ba34-8610309cc492",
          "name": "camarero",
          "description": "Gives access to hotel camarero service.",
          "composite": false,
          "clientRole": false,
          "containerId": "hotel",
          "attributes": {}
        },
        {
          "id": "998df3bf-0bb5-478b-b687-388808a3c255",
          "name": "uma_authorization",
          "description": "${role_uma_authorization}",
          "composite": false,
          "clientRole": false,
          "containerId": "hotel",
          "attributes": {}
        },
        {
          "id": "633a5337-5cf5-4c98-8f66-d61faec6d52d",
          "name": "cocinera",
          "description": "Gives access to hotel cocinera service.",
          "composite": false,
          "clientRole": false,
          "containerId": "hotel",
          "attributes": {}
        },
        {
          "id": "41a701e3-fd02-4f5a-ada2-2ee531a55c79",
          "name": "offline_access",
          "description": "${role_offline-access}",
          "composite": false,
          "clientRole": false,
          "containerId": "hotel",
          "attributes": {}
        }
      ],
      "client": {
        "realm-management": [
          {
            "id": "77b9b01f-3995-4e32-ada7-951be4bd7e76",
            "name": "view-clients",
            "description": "${role_view-clients}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-clients"
                ]
              }
            },
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "83b5cf59-805e-4cc4-9821-9b28b5129697",
            "name": "manage-authorization",
            "description": "${role_manage-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "1dfea0a5-6a29-4b41-9c95-6682c2ab9669",
            "name": "view-realm",
            "description": "${role_view-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "becb9040-95d6-4ac7-aafc-9698784ff3cf",
            "name": "view-users",
            "description": "${role_view-users}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "query-groups",
                  "query-users"
                ]
              }
            },
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "e83d2bf8-cbd3-40c5-82fb-82554a0809fe",
            "name": "query-groups",
            "description": "${role_query-groups}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "0562f289-1821-4205-9791-6612d55182db",
            "name": "view-authorization",
            "description": "${role_view-authorization}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "866aa825-b2b9-4d1b-b7e7-e2fdfce3af8f",
            "name": "manage-clients",
            "description": "${role_manage-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "595171a6-4de6-4ca8-841e-a206a2a5652a",
            "name": "manage-events",
            "description": "${role_manage-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "d2d5d531-6dba-43ba-89d1-e1bb680fcffc",
            "name": "query-users",
            "description": "${role_query-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "36bce8ca-2edd-4a73-9c82-b369d1882cdc",
            "name": "query-clients",
            "description": "${role_query-clients}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "4fda3f56-6b2c-4a02-b108-fccefb1cc20a",
            "name": "manage-users",
            "description": "${role_manage-users}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "b186ab7c-58e1-484b-a15a-f07829283cbf",
            "name": "view-events",
            "description": "${role_view-events}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "ff631a9b-7b5c-4425-a35b-e791051bf358",
            "name": "view-identity-providers",
            "description": "${role_view-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "1fb54ef4-8f8a-426d-9914-258c45af8a2a",
            "name": "impersonation",
            "description": "${role_impersonation}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "7e879761-0bf4-4ec5-9aa5-f69d388f7160",
            "name": "manage-realm",
            "description": "${role_manage-realm}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "402f4258-eb60-448e-b25a-569a66885c77",
            "name": "realm-admin",
            "description": "${role_realm-admin}",
            "composite": true,
            "composites": {
              "client": {
                "realm-management": [
                  "view-clients",
                  "manage-authorization",
                  "view-realm",
                  "view-users",
                  "query-groups",
                  "view-authorization",
                  "manage-clients",
                  "manage-events",
                  "query-users",
                  "query-clients",
                  "manage-users",
                  "view-events",
                  "impersonation",
                  "view-identity-providers",
                  "manage-realm",
                  "create-client",
                  "manage-identity-providers",
                  "query-realms"
                ]
              }
            },
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "13b01234-ea7b-499f-9670-f0c72d4c0578",
            "name": "create-client",
            "description": "${role_create-client}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "a024a944-72be-4866-ba24-f52e17ba52d5",
            "name": "manage-identity-providers",
            "description": "${role_manage-identity-providers}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          },
          {
            "id": "0e540e4e-d7ac-4663-a8ef-f3e1c4d61ca2",
            "name": "query-realms",
            "description": "${role_query-realms}",
            "composite": false,
            "clientRole": true,
            "containerId": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
            "attributes": {}
          }
        ],
        "security-admin-console": [],
        "admin-cli": [],
        "react": [],
        "account-console": [],
        "broker": [
          {
            "id": "9e038ecf-de4b-48fa-88c4-d10125d14491",
            "name": "read-token",
            "description": "${role_read-token}",
            "composite": false,
            "clientRole": true,
            "containerId": "e5dfd299-56a7-413b-ade0-37dd3937d066",
            "attributes": {}
          }
        ],
        "account": [
          {
            "id": "4fd079eb-247e-47fc-864a-dd56861ac7b2",
            "name": "manage-account",
            "description": "${role_manage-account}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "manage-account-links"
                ]
              }
            },
            "clientRole": true,
            "containerId": "4beaea6a-f83c-41a3-ba60-4b05eeeeb2f3",
            "attributes": {}
          },
          {
            "id": "7fd11248-68f1-4e78-b328-724696771468",
            "name": "view-profile",
            "description": "${role_view-profile}",
            "composite": false,
            "clientRole": true,
            "containerId": "4beaea6a-f83c-41a3-ba60-4b05eeeeb2f3",
            "attributes": {}
          },
          {
            "id": "044bfbd6-2c8f-46c3-8796-6141aa7d3ec7",
            "name": "manage-account-links",
            "description": "${role_manage-account-links}",
            "composite": false,
            "clientRole": true,
            "containerId": "4beaea6a-f83c-41a3-ba60-4b05eeeeb2f3",
            "attributes": {}
          },
          {
            "id": "45d2dbbb-0ac9-495e-b20b-c3f68b5b733a",
            "name": "view-applications",
            "description": "${role_view-applications}",
            "composite": false,
            "clientRole": true,
            "containerId": "4beaea6a-f83c-41a3-ba60-4b05eeeeb2f3",
            "attributes": {}
          },
          {
            "id": "0e171354-202c-4562-9a9e-c3ce3acfe7a2",
            "name": "view-consent",
            "description": "${role_view-consent}",
            "composite": false,
            "clientRole": true,
            "containerId": "4beaea6a-f83c-41a3-ba60-4b05eeeeb2f3",
            "attributes": {}
          },
          {
            "id": "379a364e-70c7-40a9-b0f9-4af35c48aed2",
            "name": "manage-consent",
            "description": "${role_manage-consent}",
            "composite": true,
            "composites": {
              "client": {
                "account": [
                  "view-consent"
                ]
              }
            },
            "clientRole": true,
            "containerId": "4beaea6a-f83c-41a3-ba60-4b05eeeeb2f3",
            "attributes": {}
          }
        ]
      }
    },
    "groups": [],
    "defaultRoles": [
      "offline_access",
      "uma_authorization"
    ],
    "requiredCredentials": [
      "password"
    ],
    "otpPolicyType": "totp",
    "otpPolicyAlgorithm": "HmacSHA1",
    "otpPolicyInitialCounter": 0,
    "otpPolicyDigits": 6,
    "otpPolicyLookAheadWindow": 1,
    "otpPolicyPeriod": 30,
    "otpSupportedApplications": [
      "FreeOTP",
      "Google Authenticator"
    ],
    "webAuthnPolicyRpEntityName": "keycloak",
    "webAuthnPolicySignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyRpId": "",
    "webAuthnPolicyAttestationConveyancePreference": "not specified",
    "webAuthnPolicyAuthenticatorAttachment": "not specified",
    "webAuthnPolicyRequireResidentKey": "not specified",
    "webAuthnPolicyUserVerificationRequirement": "not specified",
    "webAuthnPolicyCreateTimeout": 0,
    "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyAcceptableAaguids": [],
    "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
    "webAuthnPolicyPasswordlessSignatureAlgorithms": [
      "ES256"
    ],
    "webAuthnPolicyPasswordlessRpId": "",
    "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
    "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
    "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
    "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
    "webAuthnPolicyPasswordlessCreateTimeout": 0,
    "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
    "webAuthnPolicyPasswordlessAcceptableAaguids": [],
    "users": [
      {
        "id": "1a55e129-f9bb-4d60-bed1-0babb09bee3e",
        "createdTimestamp": 1613639222180,
        "username": "angela",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "firstName": "Angela",
        "credentials": [
          {
            "id": "0f0069d6-17d2-4666-9583-bf73aba20707",
            "type": "password",
            "createdDate": 1613639233044,
            "secretData": "{\"value\":\"5VS26xxZg6Q2nWl3COA+EODY280dzPuUy1C4zLoxELeH3c6BDpLqTdHZgMUgGD44HBtnDEtKIRzu35Yp4OqLhw==\",\"salt\":\"wOT+hFX6sSItvj9y9aQZeA==\"}",
            "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "doncella",
          "camarero",
          "cocinera"
        ],
        "clientRoles": {
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      },
      {
        "id": "07fc37bf-2bc7-4e4f-a705-c4c683520be5",
        "createdTimestamp": 1613639242479,
        "username": "julio",
        "enabled": true,
        "totp": false,
        "emailVerified": false,
        "firstName": "Julio",
        "credentials": [
          {
            "id": "95bcefc2-8395-4864-bdea-4403d2cd0579",
            "type": "password",
            "createdDate": 1613639253413,
            "secretData": "{\"value\":\"lXW0EjT8ItMKM8l40IE6eOYg7cdUnBxOMBc+Mga6+ky8hDoLI8VZm29D90/gGCQuL+8RA7rnPB9o00WVizJZgA==\",\"salt\":\"gdlwFScmurEwE72reyq2UA==\"}",
            "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\"}"
          }
        ],
        "disableableCredentialTypes": [],
        "requiredActions": [],
        "realmRoles": [
          "camarero"
        ],
        "clientRoles": {
          "account": [
            "manage-account",
            "view-profile"
          ]
        },
        "notBefore": 0,
        "groups": []
      }
    ],
    "scopeMappings": [
      {
        "clientScope": "offline_access",
        "roles": [
          "offline_access"
        ]
      }
    ],
    "clientScopeMappings": {
      "account": [
        {
          "client": "account-console",
          "roles": [
            "manage-account"
          ]
        }
      ]
    },
    "clients": [
      {
        "id": "4beaea6a-f83c-41a3-ba60-4b05eeeeb2f3",
        "clientId": "account",
        "name": "${client_account}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/hotel/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "af63431b-b4fc-4241-bfc7-59548eec2312",
        "defaultRoles": [
          "manage-account",
          "view-profile"
        ],
        "redirectUris": [
          "/realms/hotel/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "b5647798-a65d-4869-914a-1d43d8312915",
        "clientId": "account-console",
        "name": "${client_account-console}",
        "rootUrl": "${authBaseUrl}",
        "baseUrl": "/realms/hotel/account/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "893e3cf7-48e3-470a-a210-c6b20da4fc8d",
        "redirectUris": [
          "/realms/hotel/account/*"
        ],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "833160f5-715c-4b85-9dc2-2532a51879fe",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "967fe93a-f1de-4ee6-8bcc-f50abeb220b2",
        "clientId": "admin-cli",
        "name": "${client_admin-cli}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "1a92cdc9-43ae-4c41-9845-a934347c4de6",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": false,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "e5dfd299-56a7-413b-ade0-37dd3937d066",
        "clientId": "broker",
        "name": "${client_broker}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "494ca04c-b490-49b2-8ace-accee701e502",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "bf66deaa-002e-4421-b8fa-fc208e2e2929",
        "clientId": "react",
        "rootUrl": "https://lukaszbudnik.github.io/hotel-spa/",
        "adminUrl": "https://lukaszbudnik.github.io/hotel-spa/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "ee3ae010-4f1d-4ea4-92f3-c04fd90de25f",
        "redirectUris": [
          "https://lukaszbudnik.github.io/hotel-spa/*"
        ],
        "webOrigins": [
          "https://lukaszbudnik.github.io"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": true,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "saml.assertion.signature": "false",
          "access.token.lifespan": "900",
          "saml.force.post.binding": "false",
          "saml.multivalued.roles": "false",
          "saml.encrypt": "false",
          "saml.server.signature": "false",
          "saml.server.signature.keyinfo.ext": "false",
          "exclude.session.state.from.auth.response": "false",
          "saml_force_name_id_format": "false",
          "saml.client.signature": "false",
          "tls.client.certificate.bound.access.tokens": "false",
          "saml.authnstatement": "false",
          "display.on.consent.screen": "false",
          "saml.onetimeuse.condition": "false"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": true,
        "nodeReRegistrationTimeout": -1,
        "protocolMappers": [
          {
            "id": "c7772582-8cce-4601-af90-6b824799b9a0",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "67a723b4-8065-4b55-ba76-5acabcfa87a0",
        "clientId": "realm-management",
        "name": "${client_realm-management}",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "f48b587d-2cf3-47db-88e4-eae5a7063ec9",
        "redirectUris": [],
        "webOrigins": [],
        "notBefore": 0,
        "bearerOnly": true,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": false,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {},
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      },
      {
        "id": "cc8e2907-4386-4a01-be99-46e1f1936bee",
        "clientId": "security-admin-console",
        "name": "${client_security-admin-console}",
        "rootUrl": "${authAdminUrl}",
        "baseUrl": "/admin/hotel/console/",
        "surrogateAuthRequired": false,
        "enabled": true,
        "alwaysDisplayInConsole": false,
        "clientAuthenticatorType": "client-secret",
        "secret": "4e98717e-7b42-49b5-bdfc-152dfa8d01d7",
        "redirectUris": [
          "/admin/hotel/console/*"
        ],
        "webOrigins": [
          "+"
        ],
        "notBefore": 0,
        "bearerOnly": false,
        "consentRequired": false,
        "standardFlowEnabled": true,
        "implicitFlowEnabled": false,
        "directAccessGrantsEnabled": false,
        "serviceAccountsEnabled": false,
        "publicClient": true,
        "frontchannelLogout": false,
        "protocol": "openid-connect",
        "attributes": {
          "pkce.code.challenge.method": "S256"
        },
        "authenticationFlowBindingOverrides": {},
        "fullScopeAllowed": false,
        "nodeReRegistrationTimeout": 0,
        "protocolMappers": [
          {
            "id": "febf65fb-2926-411b-9f55-b9d4a7cb322d",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          }
        ],
        "defaultClientScopes": [
          "web-origins",
          "role_list",
          "profile",
          "roles",
          "email"
        ],
        "optionalClientScopes": [
          "address",
          "phone",
          "offline_access",
          "microprofile-jwt"
        ]
      }
    ],
    "clientScopes": [
      {
        "id": "c2825742-7962-4d25-b81e-7fbeebfff991",
        "name": "address",
        "description": "OpenID Connect built-in scope: address",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${addressScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "a86bc10e-7d50-4a5a-b60c-e370994a9e64",
            "name": "address",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-address-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute.formatted": "formatted",
              "user.attribute.country": "country",
              "user.attribute.postal_code": "postal_code",
              "userinfo.token.claim": "true",
              "user.attribute.street": "street",
              "id.token.claim": "true",
              "user.attribute.region": "region",
              "access.token.claim": "true",
              "user.attribute.locality": "locality"
            }
          }
        ]
      },
      {
        "id": "d9a4f699-decb-4b74-8d2e-2b04ac540a8e",
        "name": "email",
        "description": "OpenID Connect built-in scope: email",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${emailScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "1f197328-068a-4b97-b1b3-21d37b7d9191",
            "name": "email verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "emailVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "e6b3ec6b-b989-49ba-abff-c8709d0eb582",
            "name": "email",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "email",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "email",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "481391e5-04ec-41bf-b002-e90991bdc927",
        "name": "microprofile-jwt",
        "description": "Microprofile - JWT built-in scope",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "false"
        },
        "protocolMappers": [
          {
            "id": "34e6f1b7-117c-431d-917b-cae971a9f613",
            "name": "upn",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "upn",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f9eb8ba4-d9b5-4c16-a464-4f3433ad27ea",
            "name": "groups",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "multivalued": "true",
              "userinfo.token.claim": "true",
              "user.attribute": "foo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "groups",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "9ccf9e62-2cee-4ff3-944f-884c7611d52c",
        "name": "offline_access",
        "description": "OpenID Connect built-in scope: offline_access",
        "protocol": "openid-connect",
        "attributes": {
          "consent.screen.text": "${offlineAccessScopeConsentText}",
          "display.on.consent.screen": "true"
        }
      },
      {
        "id": "f8e04203-73ba-4a07-b95e-eb5b420be64a",
        "name": "phone",
        "description": "OpenID Connect built-in scope: phone",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${phoneScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "e257d8e7-e653-48bb-89c3-dd65fe74652b",
            "name": "phone number verified",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumberVerified",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number_verified",
              "jsonType.label": "boolean"
            }
          },
          {
            "id": "c652db33-f601-4ab8-81a6-79e88eb651a1",
            "name": "phone number",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "phoneNumber",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "phone_number",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "1639effc-372d-4bf5-999e-f249e00f9c83",
        "name": "profile",
        "description": "OpenID Connect built-in scope: profile",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "true",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${profileScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "e4c6a925-e8c8-4dad-b524-83a1cbf4fd50",
            "name": "given name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "firstName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "given_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "29598db7-dd25-4821-acb8-531830a132de",
            "name": "family name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "lastName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "family_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "cc3b8f89-cd91-4efb-a3bf-bf1987eaaed7",
            "name": "profile",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "profile",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "profile",
              "jsonType.label": "String"
            }
          },
          {
            "id": "c7cf51c9-4dbb-4063-89c5-d46b46bfc5b2",
            "name": "birthdate",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "birthdate",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "birthdate",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e4af44b7-7a53-47f9-8050-23f1c13e5b94",
            "name": "updated at",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "updatedAt",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "updated_at",
              "jsonType.label": "String"
            }
          },
          {
            "id": "48acf5a8-2c8d-4893-bfdd-ecc44438d76a",
            "name": "full name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-full-name-mapper",
            "consentRequired": false,
            "config": {
              "id.token.claim": "true",
              "access.token.claim": "true",
              "userinfo.token.claim": "true"
            }
          },
          {
            "id": "6319c7d7-8c61-46fd-a568-c82658f3ebc0",
            "name": "middle name",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "middleName",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "middle_name",
              "jsonType.label": "String"
            }
          },
          {
            "id": "ca4703e2-6150-4c00-bd8e-a6f3fc0ada9f",
            "name": "website",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "website",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "website",
              "jsonType.label": "String"
            }
          },
          {
            "id": "f35ff203-f5c9-446f-a1b2-712c1b07fecb",
            "name": "gender",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "gender",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "gender",
              "jsonType.label": "String"
            }
          },
          {
            "id": "4bb0c287-1890-4c80-9c4e-1906194057d5",
            "name": "username",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-property-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "username",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "preferred_username",
              "jsonType.label": "String"
            }
          },
          {
            "id": "fb65084f-6562-4cc1-945a-d64c8b933797",
            "name": "nickname",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "nickname",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "nickname",
              "jsonType.label": "String"
            }
          },
          {
            "id": "54b9656f-fc36-4027-b5d4-cb1afbd68c37",
            "name": "locale",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "locale",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "locale",
              "jsonType.label": "String"
            }
          },
          {
            "id": "690c6eba-02ee-41c1-89b6-951fe0c65453",
            "name": "zoneinfo",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "zoneinfo",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "zoneinfo",
              "jsonType.label": "String"
            }
          },
          {
            "id": "e27f735d-20e0-4577-9fe5-421bbc777973",
            "name": "picture",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-attribute-mapper",
            "consentRequired": false,
            "config": {
              "userinfo.token.claim": "true",
              "user.attribute": "picture",
              "id.token.claim": "true",
              "access.token.claim": "true",
              "claim.name": "picture",
              "jsonType.label": "String"
            }
          }
        ]
      },
      {
        "id": "5ad6afe4-7890-471a-bc73-0d9568dd20c9",
        "name": "role_list",
        "description": "SAML role list",
        "protocol": "saml",
        "attributes": {
          "consent.screen.text": "${samlRoleListScopeConsentText}",
          "display.on.consent.screen": "true"
        },
        "protocolMappers": [
          {
            "id": "bf5e0f0e-45c0-48c7-9747-0b6106b3a50d",
            "name": "role list",
            "protocol": "saml",
            "protocolMapper": "saml-role-list-mapper",
            "consentRequired": false,
            "config": {
              "single": "false",
              "attribute.nameformat": "Basic",
              "attribute.name": "Role"
            }
          }
        ]
      },
      {
        "id": "ee3cafb0-4f49-47a3-a4bd-d28b5500f49b",
        "name": "roles",
        "description": "OpenID Connect scope for add user roles to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "true",
          "consent.screen.text": "${rolesScopeConsentText}"
        },
        "protocolMappers": [
          {
            "id": "83384741-76f6-4a49-93ae-27ddc6a85795",
            "name": "audience resolve",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-audience-resolve-mapper",
            "consentRequired": false,
            "config": {}
          },
          {
            "id": "499b0170-2349-4032-bf55-501ed3c2a591",
            "name": "client roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-client-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "resource_access.${client_id}.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          },
          {
            "id": "3614df76-d0bb-46d5-ab06-549e6c8def02",
            "name": "realm roles",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-usermodel-realm-role-mapper",
            "consentRequired": false,
            "config": {
              "user.attribute": "foo",
              "access.token.claim": "true",
              "claim.name": "realm_access.roles",
              "jsonType.label": "String",
              "multivalued": "true"
            }
          }
        ]
      },
      {
        "id": "a0399b3f-978e-48cf-b082-8fd6599e7dca",
        "name": "web-origins",
        "description": "OpenID Connect scope for add allowed web origins to the access token",
        "protocol": "openid-connect",
        "attributes": {
          "include.in.token.scope": "false",
          "display.on.consent.screen": "false",
          "consent.screen.text": ""
        },
        "protocolMappers": [
          {
            "id": "5f26c7ec-81ef-4af4-905a-71b7b6014af6",
            "name": "allowed web origins",
            "protocol": "openid-connect",
            "protocolMapper": "oidc-allowed-origins-mapper",
            "consentRequired": false,
            "config": {}
          }
        ]
      }
    ],
    "defaultDefaultClientScopes": [
      "profile",
      "role_list",
      "web-origins",
      "email",
      "roles"
    ],
    "defaultOptionalClientScopes": [
      "microprofile-jwt",
      "offline_access",
      "address",
      "phone"
    ],
    "browserSecurityHeaders": {
      "contentSecurityPolicyReportOnly": "",
      "xContentTypeOptions": "nosniff",
      "xRobotsTag": "none",
      "xFrameOptions": "SAMEORIGIN",
      "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
      "xXSSProtection": "1; mode=block",
      "strictTransportSecurity": "max-age=31536000; includeSubDomains"
    },
    "smtpServer": {},
    "eventsEnabled": false,
    "eventsListeners": [
      "jboss-logging"
    ],
    "enabledEventTypes": [],
    "adminEventsEnabled": false,
    "adminEventsDetailsEnabled": false,
    "components": {
      "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
        {
          "id": "fb3eee17-0bd5-4384-8d4e-02b35795b0c6",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-full-name-mapper",
              "oidc-sha256-pairwise-sub-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-address-mapper",
              "oidc-usermodel-attribute-mapper",
              "saml-user-attribute-mapper",
              "saml-role-list-mapper"
            ]
          }
        },
        {
          "id": "4d54ddb5-9b8b-4318-9b48-e0ceeeed8594",
          "name": "Trusted Hosts",
          "providerId": "trusted-hosts",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "host-sending-registration-request-must-match": [
              "true"
            ],
            "client-uris-must-match": [
              "true"
            ]
          }
        },
        {
          "id": "33fbcf88-2d18-4f79-bd99-c4e026434c43",
          "name": "Full Scope Disabled",
          "providerId": "scope",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "8ad164e4-61c6-4f7b-9f35-6e5f5436c09f",
          "name": "Consent Required",
          "providerId": "consent-required",
          "subType": "anonymous",
          "subComponents": {},
          "config": {}
        },
        {
          "id": "182cde01-759c-4e48-834b-d01dc04836dc",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "authenticated",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "4fdf02c5-5cf1-4c89-8711-561cb462199f",
          "name": "Allowed Client Scopes",
          "providerId": "allowed-client-templates",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allow-default-scopes": [
              "true"
            ]
          }
        },
        {
          "id": "6c4e5462-15d4-4d81-960e-d66b24ce642f",
          "name": "Allowed Protocol Mapper Types",
          "providerId": "allowed-protocol-mappers",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "allowed-protocol-mapper-types": [
              "oidc-sha256-pairwise-sub-mapper",
              "saml-role-list-mapper",
              "oidc-full-name-mapper",
              "saml-user-property-mapper",
              "oidc-usermodel-property-mapper",
              "oidc-address-mapper",
              "saml-user-attribute-mapper",
              "oidc-usermodel-attribute-mapper"
            ]
          }
        },
        {
          "id": "8fcd8266-c1b7-4b17-a5cd-abb1c92057e2",
          "name": "Max Clients Limit",
          "providerId": "max-clients",
          "subType": "anonymous",
          "subComponents": {},
          "config": {
            "max-clients": [
              "200"
            ]
          }
        }
      ],
      "org.keycloak.keys.KeyProvider": [
        {
          "id": "5dedc4f2-31c6-490d-9664-ea20c0ef39c7",
          "name": "aes-generated",
          "providerId": "aes-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "741c4e7c-4461-444b-8404-c9fbbbc18368"
            ],
            "secret": [
              "UrEZOqn2ZLq2S7invNRp_g"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "a6117053-07a1-43aa-9917-5de61e004112",
          "name": "rsa-generated",
          "providerId": "rsa-generated",
          "subComponents": {},
          "config": {
            "privateKey": [
              "MIIEpQIBAAKCAQEAyn1SYrKiXgJembEG1emGlUw/NliK0tOTeKr8eBp7TZxI8D9k9FUkfzEeQyWekShPt3yTG9boZ9Sq/K7FAfs7vXFG+kTKYYXysvfdkHHKJnPWEAJgqj3vDEpHB/Xqw5OtqOkSNPNYOxJ65ZmmZVNB77NpGK5xW5s7xc7XXvLuILhfbOQXlObPbMnjVcnQSGHjmfbtTKsQ/im6ayxtShsLFQgEJycplJU21WRy3T9cDHpGOMF3LehFIOmsxspcuC/idS0Nber3Fuw9QndSHZQLKPTkDlyacPu9SyOJiMmD9S4QOZo9UVQWA8JlKa+KuL6TXyZ1OZdSkPSX1o1xeH7LewIDAQABAoIBAQDECQAxvW+kQ/cCJHjRr/wznlW0b5Q2987WC/PQ8xJc2Olkbnt2cNecrBj4OPuC3NwQb/KcCTuHCkVfzHO+r1Pu3DQzJ1YnhF6rFXzT0tY60/pyFVswdjVwWJjcBCD8p4SA+uQ9jznkNsf0cQS/JBO51J/y3S+x2F/N6apoqhgQY7U+JzW6+5tTtRH85hwMrsUVCS/DlgQxGfHUp2V4S1K7VRShu6yw/2keSpYI/I3jcgn88iDiKJZpyNGhCTNW4IeGymPCvyW/bjph9wUNzy7z/ixXYjWH33S+TXNRZ28KcoLE3BWNo/D8Gy7UVLBaRRsReulicAmDe72uzQ8a8oiBAoGBAPTC/eu/eOoQVFGGIbVP3gvgmrM38j+/gqOuvyZEklQftz/zm+xKy1LEAsvpZRNBajRYzKDt6dX+YcDlutIb+TR4xlPpSviBbVfpaufoEWL6NlL8E2o15T4ckbXBXKeFBPXtYa8B3tvK9WBGHnsujxHqeA6zKxOBY09t20gRVM/ZAoGBANPJcwz/vammHfFpbjnyXui4LEYqhNFYWpPBhZtVhEfDvJOQBTGNZTS9qyo24mxMqS03/smUXRq3oMMSXuV5PY+2J95Lcrz3vC9tDjGzzHVdE1QTOlIM2FeeHWzAP5KcHhMibM4Not/oHsz8FYMqS/QlivJ+s9stXx4U7CRmWbVzAoGBAOprlyajS/thiGBMRxyQUequQ3xCqRHFKin6w7izFDLd7XSirUOynum2Mbd64gN/M2jPY6z+MGd0K8vEOxnhENzgj5LubY905nS8aleSPJS/cCgqpa2j0NucITIi78rB6+5eXKBw+jEoQbrjbW4tOXm/Rx1NHISh96urW8m6T7CBAoGBAIAvtz5P8IklbYw4Byp1o7Jx/wI9LATV2IUEJg0d1qHlPFeIXUxfy7j/cAFuFN/+Cou/D60M6smICXrovJ1iI7u/QiRPQFRWEgYWmPfGXuNOgatqs+sDsVJe9mpjdlcTvTRRqs+Q+1tQ0Iu7rH2mdTCCJLafr9bigGbhvQhPFs83AoGATqQwMfyA8M3QQ6yxkUNqCJJTkU/VM//WDR+kz3HNRcnuYrg9feMqcqyQKLaVCrTnDbUecbxjiTpt9EMfBS1twLTSKfbFWvUQCL8R3ySrvrCshtnQDbKVFCu69k5VnuIGOoBpd55Jy5uikEGFTnJzaRKBhqMd00ctRTpEneKsHI4="
            ],
            "certificate": [
              "MIICmTCCAYECBgF3tGFV1DANBgkqhkiG9w0BAQsFADAQMQ4wDAYDVQQDDAVob3RlbDAeFw0yMTAyMTgwOTAxNTNaFw0zMTAyMTgwOTAzMzNaMBAxDjAMBgNVBAMMBWhvdGVsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyn1SYrKiXgJembEG1emGlUw/NliK0tOTeKr8eBp7TZxI8D9k9FUkfzEeQyWekShPt3yTG9boZ9Sq/K7FAfs7vXFG+kTKYYXysvfdkHHKJnPWEAJgqj3vDEpHB/Xqw5OtqOkSNPNYOxJ65ZmmZVNB77NpGK5xW5s7xc7XXvLuILhfbOQXlObPbMnjVcnQSGHjmfbtTKsQ/im6ayxtShsLFQgEJycplJU21WRy3T9cDHpGOMF3LehFIOmsxspcuC/idS0Nber3Fuw9QndSHZQLKPTkDlyacPu9SyOJiMmD9S4QOZo9UVQWA8JlKa+KuL6TXyZ1OZdSkPSX1o1xeH7LewIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQCg6HQzzvreuVuI7tkdL2Dkmh+L5EJX79Psg4S7wFFgphM1AtOZm9Z4gEhsxwN7znw6HEou+xpN2+oC28jnJieNi/cUzNqgiURxPVLMJyiF60F2izBRkpJ4EAYKrzieAvCSjsBcSaUw47ppv40NrnDgabrcNHZ2zD5LdbTIbDxwFDv4QU+tLMjvHkTDCGciaMSMHF0wSwxAdbtJ8V2pwH9ndkok5AnlPKWTBejT+rOZtXPNFT5viL3gpA4y1T6ixumdUe97Uf/1/F4L6SOMyj4491YEk+7LkQlHX6iYoIqSMxPyfKgex+m43QHQ6zDU0+Oos8CTTVxZItHyF06210Us"
            ],
            "priority": [
              "100"
            ]
          }
        },
        {
          "id": "570f8c2f-1a9e-425d-8f19-200bbd99628f",
          "name": "hmac-generated",
          "providerId": "hmac-generated",
          "subComponents": {},
          "config": {
            "kid": [
              "9e334a9b-76fa-4c30-8e4d-f17254d00631"
            ],
            "secret": [
              "5cP0XXMNcWNKsUIubCKgXFAaFfObdmeDZfmJXKEUZToxAPo08Wv699nj2s4vNGB6tJXdaW3s1-5EETjziAaHVg"
            ],
            "priority": [
              "100"
            ],
            "algorithm": [
              "HS256"
            ]
          }
        }
      ]
    },
    "internationalizationEnabled": false,
    "supportedLocales": [],
    "authenticationFlows": [
      {
        "id": "9a16b01e-4a0e-44f2-bab3-6c95a1d72649",
        "alias": "Account verification options",
        "description": "Method with which to verity the existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-email-verification",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Verify Existing Account by Re-authentication",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "ec08b65c-e830-4bdb-9a55-9f3a95fc29d8",
        "alias": "Authentication Options",
        "description": "Authentication options.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "basic-auth",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "basic-auth-otp",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "c92c3dda-bd10-41ff-b9bd-739690872ab8",
        "alias": "Browser - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "ee18c766-42e1-4178-8379-c71298e39c3e",
        "alias": "Direct Grant - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "92d2532f-9106-4c0b-81db-cf93b4663188",
        "alias": "First broker login - Conditional OTP",
        "description": "Flow to determine if the OTP is required for the authentication",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-otp-form",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "9890d762-3d61-4423-ae74-8fe18c3b863c",
        "alias": "Handle Existing Account",
        "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-confirm-link",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Account verification options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "3549d8fa-df8b-467e-87ca-11d7f19f2227",
        "alias": "Reset - Conditional OTP",
        "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "conditional-user-configured",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-otp",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "43dcf019-4262-4499-90a7-31036dea14ce",
        "alias": "User creation or linking",
        "description": "Flow for the existing/non-existing user alternatives",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "create unique user config",
            "authenticator": "idp-create-user-if-unique",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "flowAlias": "Handle Existing Account",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "11c29236-3536-48b7-9a55-0bbac30d89b6",
        "alias": "Verify Existing Account by Re-authentication",
        "description": "Reauthentication of existing account",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "idp-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "First broker login - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "64456f7a-cd9c-4511-be6c-9927b4a412f2",
        "alias": "browser",
        "description": "browser based authentication",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-cookie",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "auth-spnego",
            "requirement": "DISABLED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "identity-provider-redirector",
            "requirement": "ALTERNATIVE",
            "priority": 25,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "flowAlias": "forms",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "ce3c4a02-328c-4285-a8ac-999e13d82d89",
        "alias": "clients",
        "description": "Base authentication for clients",
        "providerId": "client-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "client-secret",
            "requirement": "ALTERNATIVE",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-secret-jwt",
            "requirement": "ALTERNATIVE",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "client-x509",
            "requirement": "ALTERNATIVE",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "fe65123c-548a-4c95-8b00-dd5f31a8356a",
        "alias": "direct grant",
        "description": "OpenID Connect Resource Owner Grant",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "direct-grant-validate-username",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "direct-grant-validate-password",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 30,
            "flowAlias": "Direct Grant - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "1084c186-43d8-4c3b-8a71-f462ef829ff0",
        "alias": "docker auth",
        "description": "Used by Docker clients to authenticate against the IDP",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "docker-http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "b7074914-5246-4c8f-9ca9-94d74f04bcda",
        "alias": "first broker login",
        "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticatorConfig": "review profile config",
            "authenticator": "idp-review-profile",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "User creation or linking",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "9da7cd82-274b-4a54-9d18-bfb6022e8390",
        "alias": "forms",
        "description": "Username, password, otp and other auth forms.",
        "providerId": "basic-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "auth-username-password-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 20,
            "flowAlias": "Browser - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "705942f3-7953-47dd-b35a-a58e11d3bc20",
        "alias": "http challenge",
        "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "no-cookie-redirect",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "REQUIRED",
            "priority": 20,
            "flowAlias": "Authentication Options",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "0c842b37-1a4a-4199-85b5-4d9626fc2df3",
        "alias": "registration",
        "description": "registration flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-page-form",
            "requirement": "REQUIRED",
            "priority": 10,
            "flowAlias": "registration form",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "67ffb904-0229-4a1e-96b0-eabbb7326f34",
        "alias": "registration form",
        "description": "registration form",
        "providerId": "form-flow",
        "topLevel": false,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "registration-user-creation",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-profile-action",
            "requirement": "REQUIRED",
            "priority": 40,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-password-action",
            "requirement": "REQUIRED",
            "priority": 50,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "registration-recaptcha-action",
            "requirement": "DISABLED",
            "priority": 60,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      },
      {
        "id": "6d3f308f-2917-4233-9fba-acd398d1ddf4",
        "alias": "reset credentials",
        "description": "Reset credentials for a user if they forgot their password or something",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "reset-credentials-choose-user",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-credential-email",
            "requirement": "REQUIRED",
            "priority": 20,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "authenticator": "reset-password",
            "requirement": "REQUIRED",
            "priority": 30,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          },
          {
            "requirement": "CONDITIONAL",
            "priority": 40,
            "flowAlias": "Reset - Conditional OTP",
            "userSetupAllowed": false,
            "autheticatorFlow": true
          }
        ]
      },
      {
        "id": "2f62b364-2e01-4852-a32f-b0648fa5ddd8",
        "alias": "saml ecp",
        "description": "SAML ECP Profile Authentication Flow",
        "providerId": "basic-flow",
        "topLevel": true,
        "builtIn": true,
        "authenticationExecutions": [
          {
            "authenticator": "http-basic-authenticator",
            "requirement": "REQUIRED",
            "priority": 10,
            "userSetupAllowed": false,
            "autheticatorFlow": false
          }
        ]
      }
    ],
    "authenticatorConfig": [
      {
        "id": "250a255a-a584-49b3-b3b2-256c2387c8ea",
        "alias": "create unique user config",
        "config": {
          "require.password.update.after.registration": "false"
        }
      },
      {
        "id": "52265b8b-a6ed-41a1-b7e9-850e53777d5f",
        "alias": "review profile config",
        "config": {
          "update.profile.on.first.login": "missing"
        }
      }
    ],
    "requiredActions": [
      {
        "alias": "CONFIGURE_TOTP",
        "name": "Configure OTP",
        "providerId": "CONFIGURE_TOTP",
        "enabled": true,
        "defaultAction": false,
        "priority": 10,
        "config": {}
      },
      {
        "alias": "terms_and_conditions",
        "name": "Terms and Conditions",
        "providerId": "terms_and_conditions",
        "enabled": false,
        "defaultAction": false,
        "priority": 20,
        "config": {}
      },
      {
        "alias": "UPDATE_PASSWORD",
        "name": "Update Password",
        "providerId": "UPDATE_PASSWORD",
        "enabled": true,
        "defaultAction": false,
        "priority": 30,
        "config": {}
      },
      {
        "alias": "UPDATE_PROFILE",
        "name": "Update Profile",
        "providerId": "UPDATE_PROFILE",
        "enabled": true,
        "defaultAction": false,
        "priority": 40,
        "config": {}
      },
      {
        "alias": "VERIFY_EMAIL",
        "name": "Verify Email",
        "providerId": "VERIFY_EMAIL",
        "enabled": true,
        "defaultAction": false,
        "priority": 50,
        "config": {}
      },
      {
        "alias": "update_user_locale",
        "name": "Update User Locale",
        "providerId": "update_user_locale",
        "enabled": true,
        "defaultAction": false,
        "priority": 1000,
        "config": {}
      }
    ],
    "browserFlow": "browser",
    "registrationFlow": "registration",
    "directGrantFlow": "direct grant",
    "resetCredentialsFlow": "reset credentials",
    "clientAuthenticationFlow": "clients",
    "dockerAuthenticationFlow": "docker auth",
    "attributes": {
      "clientOfflineSessionMaxLifespan": "0",
      "clientSessionIdleTimeout": "0",
      "clientSessionMaxLifespan": "0",
      "clientOfflineSessionIdleTimeout": "0"
    },
    "keycloakVersion": "11.0.3",
    "userManagedAccessAllowed": false
  }
]